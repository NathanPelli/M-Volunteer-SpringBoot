<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.oneone1995.mvolunteer.mapper.ActivityMapper">
    <resultMap id="BaseResultMap" type="com.github.oneone1995.mvolunteer.domain.Activity">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="address_province" jdbcType="VARCHAR" property="addressProvince" />
        <result column="address_city" jdbcType="VARCHAR" property="addressCity" />
        <result column="address_district" jdbcType="VARCHAR" property="addressDistrict" />
        <result column="address_street" jdbcType="VARCHAR" property="addressStreet" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="coord_long" jdbcType="DOUBLE" property="coordLong" />
        <result column="coord_lat" jdbcType="DOUBLE" property="coordLat" />
        <result column="service_type" jdbcType="VARCHAR" property="serviceType" />
        <result column="service_object" jdbcType="VARCHAR" property="serviceObject" />
        <result column="recruit_time" jdbcType="VARCHAR" property="recruitTime" />
        <result column="recruit_person_number" jdbcType="INTEGER" property="recruitPersonNumber" />
        <result column="activity_name" jdbcType="VARCHAR" property="name" />
        <result column="time" jdbcType="VARCHAR" property="time" />
        <result column="principal_name" jdbcType="VARCHAR" property="principalName" />
        <result column="principal_contact" jdbcType="VARCHAR" property="principalContact" />
        <result column="activity_status_id" jdbcType="INTEGER" property="activityStatusId" />
        <result column="working_hours" jdbcType="DOUBLE" property="workingHours" />
        <result column="timestamp" jdbcType="TIMESTAMP" property="timestamp" />
        <result column="picture" jdbcType="VARCHAR" property="picture" />
        <result column="code" jdbcType="INTEGER" property="code" />
        <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
        <result column="description" jdbcType="LONGVARCHAR" property="description" />
    </resultMap>

    <!-- 查询包装有志愿者信息的活动详情的ResultMap -->
    <resultMap id="ActivityResultMap"
                type="com.github.oneone1995.mvolunteer.domain.ActivityDetails"
                extends="BaseResultMap">
        <!-- 活动信息 -->
        <id column="activity_id" property="id"/>
        <result column="activity_name" property="name"/>
        <result column="organization" property="organization"/>
        <result column="organization_id" property="organizationId"/>
        <result column="description" property="description"/>
        <result column="address_street" property="addressStreet"/>
        <result column="recruit_time" property="recruitTime"/>
        <result column="time" property="time"/>
        <result column="activity_address" property="address"/>
        <result column="activity_working_hours" property="workingHours"/>
        <result column="principal_name" property="principalName"/>
        <result column="principal_contact" property="principalContact"/>
        <result column="service_type" property="serviceType"/>
        <result column="distance" property="distance"/>

        <!-- 志愿者信息 -->
        <collection property="volunteers" ofType="com.github.oneone1995.mvolunteer.domain.VolunteerInfo">
            <id column="id" jdbcType="INTEGER" property="id" />
            <result column="name" jdbcType="VARCHAR" property="name" />
            <result column="id_card" jdbcType="VARCHAR" property="idCard" />
            <result column="sex" jdbcType="INTEGER" property="sex" />
            <result column="age" jdbcType="INTEGER" property="age" />
            <result column="birthday" jdbcType="DATE" property="birthday" />
            <result column="political_status" jdbcType="VARCHAR" property="politicalStatus" />
            <result column="address" jdbcType="VARCHAR" property="address" />
            <result column="address_province" jdbcType="VARCHAR" property="addressProvince" />
            <result column="address_city" jdbcType="VARCHAR" property="addressCity" />
            <result column="working_hours" jdbcType="DOUBLE" property="workingHours" />
            <result column="avatar" jdbcType="VARCHAR" property="avatar" />
        </collection>
    </resultMap>

    <!-- 查询所有活动的sql片段 -->
    <sql id="selectActivitySql">
        SELECT
            activity.id id,
            activity.address_district district,
            activity.coord_long coordLong,
            activity.coord_lat coordLat,
            activity.recruit_person_number recruitPersonNumber,
            activity.picture picture,
            activity.name name,
            COUNT(if(activity_user.activity_user_status_id=2, TRUE, NULL)) AS recruitedPersonNumber,
            ROUND(
                    6378.138 * 2 * ASIN(
                            SQRT(
                                    POW(
                                            SIN(
                                                    (
                                                        #{coordLat} * PI() / 180 - activity.coord_lat * PI() / 180
                                                    ) / 2
                                            ),
                                            2
                                    ) + COS(#{coordLat} * PI() / 180) * COS(activity.coord_lat * PI() / 180) * POW(
                                            SIN(
                                                    (
                                                        #{coordLong} * PI() / 180 - activity.coord_long * PI() / 180
                                                    ) / 2
                                            ),
                                            2
                                    )
                            )
                    )
            ) AS distance
        FROM
            activity_user
            RIGHT OUTER JOIN activity ON activity_id = activity.id
    </sql>

    <!-- 根据活动id分组并依时间戳排序的sql片段 -->
    <sql id="groupByAndOrderBySql">
        GROUP BY
        activity.id
        ORDER BY
        activity.`timestamp`
    </sql>

    <!-- 根据活动名字模糊搜索的where条件sql片段 -->
    <sql id="conditionByActivityNameSql">
        <where>
            AND activity.activity_status_id = 1
            <if test="activityName!=null">
                AND activity.name LIKE '%${activityName}%'
            </if>
        </where>
    </sql>

    <!-- 根据活动类别查询的where条件sql片段 -->
    <sql id="conditionByCategorySql">
        <where>
            AND activity.activity_status_id = 1
            <if test="category!=null">
                AND activity.service_type = #{category}
            </if>
            <if test="district!=null">
                AND activity.address_district = #{district}
            </if>
        </where>
    </sql>

    <!-- 指定id的活动的所有信息 -->
    <select id="selectAllInfoByPrimaryKey" resultMap="BaseResultMap">
        SELECT
            *
        FROM
            activity
        WHERE
            id = #{id}
    </select>

    <update id="updateByPrimaryKey">
        update activity
        set address_province = #{addressProvince,jdbcType=VARCHAR},
            address_city = #{addressCity,jdbcType=VARCHAR},
            address_district = #{addressDistrict,jdbcType=VARCHAR},
            address_street = #{addressStreet,jdbcType=VARCHAR},
            address = #{address,jdbcType=VARCHAR},
            coord_long = #{coordLong,jdbcType=DOUBLE},
            coord_lat = #{coordLat,jdbcType=DOUBLE},
            service_type = #{serviceType,jdbcType=VARCHAR},
            service_object = #{serviceObject,jdbcType=VARCHAR},
            recruit_time = #{recruitTime,jdbcType=VARCHAR},
            recruit_person_number = #{recruitPersonNumber,jdbcType=INTEGER},
            name = #{name,jdbcType=VARCHAR},
            time = #{time,jdbcType=VARCHAR},
            principal_name = #{principalName,jdbcType=VARCHAR},
            principal_contact = #{principalContact,jdbcType=VARCHAR},
            activity_status_id = #{activityStatusId,jdbcType=INTEGER},
            working_hours = #{workingHours,jdbcType=DOUBLE},
            timestamp = #{timestamp,jdbcType=TIMESTAMP},
            picture = #{picture,jdbcType=VARCHAR},
            code = #{code,jdbcType=INTEGER},
            organization_id = #{organizationId,jdbcType=INTEGER},
            description = #{description,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 根据活动用户关系表id更新 -->
    <update id="updateSignStatusByPrimaryKey">
        UPDATE activity_user
        SET sign_in_status = 1
        WHERE
            id = #{id}
    </update>
    <!-- 更新活动的群号 -->
    <update id="updateActivityTribeId">
        UPDATE activity
        SET activity.tribe_id = #{tribeId}
        WHERE
            id = #{activityId}
    </update>

    <!-- 根据活动添加时间排序查询活动列表返回
        并根据参数中的经纬度求出距离并将其包装进HomeActivity中 -->
    <select id="selectAllOderByTime" resultType="com.github.oneone1995.mvolunteer.domain.HomeActivity">
        <include refid="selectActivitySql"/>
        WHERE
           activity.activity_status_id = 1
        <include refid="groupByAndOrderBySql"/>
    </select>

    <!-- 根据活动名字模糊搜索对应的活动列表返回
         并根据参数中的经纬度求出距离并将其包装进HomeActivity中-->
    <select id="selectByActivityName" resultType="com.github.oneone1995.mvolunteer.domain.HomeActivity">
        <include refid="selectActivitySql"/>
        <include refid="conditionByActivityNameSql"/>
        <include refid="groupByAndOrderBySql"/>
    </select>

    <!-- 根据活动category查询对应的活动列表返回
         并根据参数中的经纬度求出距离并将其包装进HomeActivity中-->
    <!-- 如果排序规则为0则按时间排序、若排序规则为1则按Geohash模糊搜索 -->
    <select id="selectByCategory" resultType="com.github.oneone1995.mvolunteer.domain.HomeActivity">
        <include refid="selectActivitySql"/>
        <include refid="conditionByCategorySql"/>
        <if test="collation==0">
            <include refid="groupByAndOrderBySql"/>
        </if>
        <if test="collation==1">
            AND geohash LIKE '${geohash}%'
            GROUP BY
            activity.id
            DESC
        </if>
    </select>

    <!-- 根据活动id返回活动详情 -->
    <select id="selectByPrimaryKey" resultMap="ActivityResultMap">
        SELECT
            activity.id activity_id,
            activity.name activity_name,
            activity.organization_id,
            organization_info.`name` organization,
            activity.description,
            activity.recruit_person_number,
            activity.picture,
            activity.address_street,
            activity.recruit_time,
            activity.time,
            activity.address activity_address,
            activity.working_hours activity_working_hours,
            activity.principal_name,
            activity.principal_contact,
            activity.service_type,
            volunteer_info.id,
            volunteer_info.avatar,
            ROUND(
                    6378.138 * 2 * ASIN(
                            SQRT(
                                    POW(
                                            SIN(
                                                    (
                                                        #{coordLat} * PI() / 180 - activity.coord_lat * PI() / 180
                                                    ) / 2
                                            ),
                                            2
                                    ) + COS(#{coordLat} * PI() / 180) * COS(activity.coord_lat * PI() / 180) * POW(
                                            SIN(
                                                    (
                                                        #{coordLong} * PI() / 180 - activity.coord_long * PI() / 180
                                                    ) / 2
                                            ),
                                            2
                                    )
                            )
                    )
            ) AS distance
        FROM
            activity
            LEFT OUTER JOIN activity_user ON activity_user.activity_id = activity.id AND activity_user_status_id = 2
            LEFT OUTER JOIN organization_info ON activity.organization_id = organization_info.id
            LEFT OUTER JOIN volunteer_info ON activity_user.user_id = volunteer_info.id
        WHERE
            activity.id = #{id}

    </select>

    <!-- 根据志愿者ID返回活动列表 -->
    <select id="selectByVolunteerId" resultType="com.github.oneone1995.mvolunteer.domain.ActivityDetails">
        SELECT
            activity.id,
            activity.`name`,
            activity.picture,
            activity.timestamp,
            activity_status.description activityStatus,
            activity_user_status.description interviewStatus,
            organization_info.name organization
        FROM
            activity_user
            JOIN activity ON activity.id = activity_user.activity_id
            JOIN activity_status ON activity_status.id = activity.activity_status_id
            JOIN activity_user_status ON activity_user_status.id = activity_user.activity_user_status_id
            JOIN organization_info ON organization_info.id = activity.organization_id
        WHERE
            activity_user.user_id = #{id}
            AND
            activity.activity_status_id != 3
        ORDER BY
            activity.`timestamp`
        DESC
    </select>

    <!-- 根据志愿者ID返回该用户的服务记录 -->
    <select id="selectHistoryByVolunteerId"
            resultType="com.github.oneone1995.mvolunteer.domain.ActivityDetails">
        SELECT
            activity.id,
            activity.`name`,
            activity.picture,
            activity.TIMESTAMP,
            activity_status.description activityStatus,
            activity.working_hours workingHours,
            organization_info.name organization
        FROM
            activity_user
            JOIN activity ON activity.id = activity_user.activity_id
            JOIN activity_status ON activity_status.id = activity.activity_status_id
            JOIN organization_info ON organization_info.id = activity.organization_id
        WHERE
            activity_user.user_id = #{id}
            AND activity.activity_status_id = 3
        ORDER BY
            activity.`timestamp` DESC
    </select>

    <!-- 根据组织id返回该组织的活动 -->
    <select id="selectByOrganizationId" resultType="com.github.oneone1995.mvolunteer.domain.ActivityDetails">
        SELECT
            activity.id,
            activity.`name`,
            activity.picture,
            activity.TIMESTAMP,
            activity.code,
            activity_status.description
        FROM
            activity
            JOIN activity_status ON activity_status.id = activity.activity_status_id
        WHERE
            activity.organization_id = #{id}
        ORDER BY
            activity.`timestamp` DESC
    </select>

    <!-- 根据活动code和用户id返回该记录在活动用户关系表中的主键id -->
    <select id="selectByCode" resultType="java.lang.Integer">
        SELECT
            activity_user.id
        FROM
            activity
            JOIN activity_user ON activity_id = activity.id
        WHERE
            CODE = #{code}
            AND user_id = #{id}
            AND activity_user_status_id = 2
    </select>


    <!-- 查询出所有的活动代码 -->
    <select id="selectAllCode" resultType="java.lang.Integer">
        SELECT
            code
        FROM
            activity
    </select>

    <!-- 根据活动id查询群号 -->
    <select id="selectTribeId" resultType="java.lang.Integer">
        SELECT
            activity.tribe_id
        FROM activity
        WHERE id = #{activityId}
    </select>


    <!-- 插入活动 -->
    <insert id="insertActivity" parameterType="com.github.oneone1995.mvolunteer.domain.Activity">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO activity
        (
            address_province,
            address_city,
            address_district,
            address_street,
            address,
            coord_long,
            coord_lat,
            geohash,
            service_type,
            service_object,
            recruit_time,
            recruit_person_number,
            name,
            time,
            principal_name,
            principal_contact,
            activity_status_id,
            working_hours,
            picture,
            code,
            organization_id,
            description
        )
        VALUES
        (
            #{addressProvince,jdbcType=VARCHAR},
            #{addressCity,jdbcType=VARCHAR},
            #{addressDistrict,jdbcType=VARCHAR},
            #{addressStreet,jdbcType=VARCHAR},
            #{address,jdbcType=VARCHAR},
            #{coordLong,jdbcType=DOUBLE},
            #{coordLat,jdbcType=DOUBLE},
            #{geohash, jdbcType=VARCHAR},
            #{serviceType,jdbcType=VARCHAR},
            #{serviceObject,jdbcType=VARCHAR},
            #{recruitTime,jdbcType=VARCHAR},
            #{recruitPersonNumber,jdbcType=INTEGER},
            #{name,jdbcType=VARCHAR},
            #{time,jdbcType=VARCHAR},
            #{principalName,jdbcType=VARCHAR},
            #{principalContact,jdbcType=VARCHAR},
            #{activityStatusId,jdbcType=INTEGER},
            #{workingHours,jdbcType=DOUBLE},
            #{picture,jdbcType=VARCHAR},
            #{code,jdbcType=INTEGER},
            #{organizationId,jdbcType=INTEGER},
            #{description,jdbcType=LONGVARCHAR}
        )
    </insert>
</mapper>